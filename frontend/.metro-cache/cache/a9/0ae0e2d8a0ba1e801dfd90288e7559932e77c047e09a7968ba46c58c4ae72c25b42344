{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/processColor","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"8DdbuUtV90Z/t9ffltCQA3iNnjQ=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.normalizeColor = normalizeColor;\n  var _processColor = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/processColor\"));\n  /**\n   * Copyright (c) Expo.\n   * Copyright (c) Nicolas Gallagher.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  const isWebColor = color => color === 'currentcolor' || color === 'currentColor' || color === 'inherit' || color.indexOf('var(') === 0;\n  function normalizeColor(color, opacity = 1) {\n    if (color == null) return;\n    if (typeof color === 'string' && isWebColor(color)) {\n      return color;\n    }\n    const colorInt = (0, _processColor.default)(color);\n    if (typeof colorInt === 'number') {\n      const r = colorInt >> 16 & 255;\n      const g = colorInt >> 8 & 255;\n      const b = colorInt & 255;\n      const a = (colorInt >> 24 & 255) / 255;\n      const alpha = (a * opacity).toFixed(2);\n      return `rgba(${r},${g},${b},${alpha})`;\n    }\n  }\n});","lineCount":32,"map":[[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[16,2,9,0],[16,8,9,6,"isWebColor"],[16,18,9,16],[16,21,9,20,"color"],[16,26,9,25],[16,30,9,30,"color"],[16,35,9,35],[16,40,9,40],[16,54,9,54],[16,58,10,4,"color"],[16,63,10,9],[16,68,10,14],[16,82,10,28],[16,86,11,4,"color"],[16,91,11,9],[16,96,11,14],[16,105,11,23],[16,109,12,4,"color"],[16,114,12,9],[16,115,12,10,"indexOf"],[16,122,12,17],[16,123,12,18],[16,129,12,24],[16,130,12,25],[16,135,12,30],[16,136,12,31],[17,2,13,7],[17,11,13,16,"normalizeColor"],[17,25,13,30,"normalizeColor"],[17,26,13,31,"color"],[17,31,13,36],[17,33,13,38,"opacity"],[17,40,13,45],[17,43,13,48],[17,44,13,49],[17,46,13,51],[18,4,14,4],[18,8,14,8,"color"],[18,13,14,13],[18,17,14,17],[18,21,14,21],[18,23,15,8],[19,4,16,4],[19,8,16,8],[19,15,16,15,"color"],[19,20,16,20],[19,25,16,25],[19,33,16,33],[19,37,16,37,"isWebColor"],[19,47,16,47],[19,48,16,48,"color"],[19,53,16,53],[19,54,16,54],[19,56,16,56],[20,6,17,8],[20,13,17,15,"color"],[20,18,17,20],[21,4,18,4],[22,4,19,4],[22,10,19,10,"colorInt"],[22,18,19,18],[22,21,19,21],[22,25,19,21,"processColor"],[22,46,19,33],[22,48,19,34,"color"],[22,53,19,39],[22,54,19,40],[23,4,20,4],[23,8,20,8],[23,15,20,15,"colorInt"],[23,23,20,23],[23,28,20,28],[23,36,20,36],[23,38,20,38],[24,6,21,8],[24,12,21,14,"r"],[24,13,21,15],[24,16,21,19,"colorInt"],[24,24,21,27],[24,28,21,31],[24,30,21,33],[24,33,21,37],[24,36,21,40],[25,6,22,8],[25,12,22,14,"g"],[25,13,22,15],[25,16,22,19,"colorInt"],[25,24,22,27],[25,28,22,31],[25,29,22,32],[25,32,22,36],[25,35,22,39],[26,6,23,8],[26,12,23,14,"b"],[26,13,23,15],[26,16,23,18,"colorInt"],[26,24,23,26],[26,27,23,29],[26,30,23,32],[27,6,24,8],[27,12,24,14,"a"],[27,13,24,15],[27,16,24,18],[27,17,24,20,"colorInt"],[27,25,24,28],[27,29,24,32],[27,31,24,34],[27,34,24,38],[27,37,24,41],[27,41,24,45],[27,44,24,48],[28,6,25,8],[28,12,25,14,"alpha"],[28,17,25,19],[28,20,25,22],[28,21,25,23,"a"],[28,22,25,24],[28,25,25,27,"opacity"],[28,32,25,34],[28,34,25,36,"toFixed"],[28,41,25,43],[28,42,25,44],[28,43,25,45],[28,44,25,46],[29,6,26,8],[29,13,26,15],[29,21,26,23,"r"],[29,22,26,24],[29,26,26,28,"g"],[29,27,26,29],[29,31,26,33,"b"],[29,32,26,34],[29,36,26,38,"alpha"],[29,41,26,43],[29,44,26,46],[30,4,27,4],[31,2,28,0],[32,0,28,1],[32,3]],"functionMap":{"names":["<global>","isWebColor","normalizeColor"],"mappings":"AAA;mBCQ;+BDG;OEC;CFe"}},"type":"js/module"}]}