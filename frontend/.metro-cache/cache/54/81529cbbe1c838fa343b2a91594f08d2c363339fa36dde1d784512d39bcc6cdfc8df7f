{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":80,"index":80}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"]}},{"name":"./Speech.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":81},"end":{"line":2,"column":46,"index":127}}],"key":"SNz2Uxx+h7gZlVByUTOQkNQNiYw=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _Speech = require(_dependencyMap[1], \"./Speech.types\");\n  //https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/text\n  const MAX_SPEECH_INPUT_LENGTH = 32767;\n  async function getVoices() {\n    return new Promise(resolve => {\n      const voices = window.speechSynthesis.getVoices();\n      if (voices.length > 0) {\n        resolve(voices);\n        return;\n      }\n      // when a page loads it takes some amount of time to populate the voices list\n      // see https://stackoverflow.com/a/52005323/4337317\n      window.speechSynthesis.onvoiceschanged = function () {\n        const voices = window.speechSynthesis.getVoices();\n        resolve(voices);\n      };\n    });\n  }\n  class ExpoSpeech extends _expoModulesCore.NativeModule {\n    async speak(id, text, options) {\n      if (text.length > MAX_SPEECH_INPUT_LENGTH) {\n        throw new _expoModulesCore.CodedError('ERR_SPEECH_INPUT_LENGTH', 'Speech input text is too long! Limit of input length is: ' + MAX_SPEECH_INPUT_LENGTH);\n      }\n      const message = new SpeechSynthesisUtterance();\n      if (typeof options.rate === 'number') {\n        message.rate = options.rate;\n      }\n      if (typeof options.pitch === 'number') {\n        message.pitch = options.pitch;\n      }\n      if (typeof options.language === 'string') {\n        message.lang = options.language;\n      }\n      if (typeof options.volume === 'number') {\n        message.volume = options.volume;\n      }\n      if ('_voiceIndex' in options && options._voiceIndex != null) {\n        const voices = await getVoices();\n        message.voice = voices[Math.min(voices.length - 1, Math.max(0, options._voiceIndex))];\n      }\n      if (typeof options.voice === 'string') {\n        const voices = await getVoices();\n        message.voice = voices[Math.max(0, voices.findIndex(voice => voice.voiceURI === options.voice))];\n      }\n      if (typeof options.onResume === 'function') {\n        message.onresume = options.onResume;\n      }\n      if (typeof options.onMark === 'function') {\n        message.onmark = options.onMark;\n      }\n      if (typeof options.onBoundary === 'function') {\n        message.onboundary = options.onBoundary;\n      }\n      message.onstart = nativeEvent => {\n        this.emit('Exponent.speakingStarted', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onend = nativeEvent => {\n        this.emit('Exponent.speakingDone', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onpause = nativeEvent => {\n        this.emit('Exponent.speakingStopped', {\n          id,\n          nativeEvent\n        });\n      };\n      message.onerror = nativeEvent => {\n        this.emit('Exponent.speakingError', {\n          id,\n          nativeEvent\n        });\n      };\n      message.text = text;\n      window.speechSynthesis.speak(message);\n      return message;\n    }\n    async getVoices() {\n      const voices = await getVoices();\n      return voices.map(voice => ({\n        identifier: voice.voiceURI,\n        quality: _Speech.VoiceQuality.Default,\n        isDefault: voice.default,\n        language: voice.lang,\n        localService: voice.localService,\n        name: voice.name,\n        voiceURI: voice.voiceURI\n      }));\n    }\n    async isSpeaking() {\n      return window.speechSynthesis.speaking;\n    }\n    async stop() {\n      return window.speechSynthesis.cancel();\n    }\n    async pause() {\n      return window.speechSynthesis.pause();\n    }\n    async resume() {\n      return window.speechSynthesis.resume();\n    }\n    maxSpeechInputLength = MAX_SPEECH_INPUT_LENGTH;\n  }\n  var _default = exports.default = (0, _expoModulesCore.registerWebModule)(ExpoSpeech, 'ExpoSpeech');\n});","lineCount":115,"map":[[6,2,1,0],[6,6,1,0,"_expoModulesCore"],[6,22,1,0],[6,25,1,0,"require"],[6,32,1,0],[6,33,1,0,"_dependencyMap"],[6,47,1,0],[7,2,2,0],[7,6,2,0,"_Speech"],[7,13,2,0],[7,16,2,0,"require"],[7,23,2,0],[7,24,2,0,"_dependencyMap"],[7,38,2,0],[8,2,3,0],[9,2,4,0],[9,8,4,6,"MAX_SPEECH_INPUT_LENGTH"],[9,31,4,29],[9,34,4,32],[9,39,4,37],[10,2,5,0],[10,17,5,15,"getVoices"],[10,26,5,24,"getVoices"],[10,27,5,24],[10,29,5,27],[11,4,6,4],[11,11,6,11],[11,15,6,15,"Promise"],[11,22,6,22],[11,23,6,24,"resolve"],[11,30,6,31],[11,34,6,36],[12,6,7,8],[12,12,7,14,"voices"],[12,18,7,20],[12,21,7,23,"window"],[12,27,7,29],[12,28,7,30,"speechSynthesis"],[12,43,7,45],[12,44,7,46,"getVoices"],[12,53,7,55],[12,54,7,56],[12,55,7,57],[13,6,8,8],[13,10,8,12,"voices"],[13,16,8,18],[13,17,8,19,"length"],[13,23,8,25],[13,26,8,28],[13,27,8,29],[13,29,8,31],[14,8,9,12,"resolve"],[14,15,9,19],[14,16,9,20,"voices"],[14,22,9,26],[14,23,9,27],[15,8,10,12],[16,6,11,8],[17,6,12,8],[18,6,13,8],[19,6,14,8,"window"],[19,12,14,14],[19,13,14,15,"speechSynthesis"],[19,28,14,30],[19,29,14,31,"onvoiceschanged"],[19,44,14,46],[19,47,14,49],[19,59,14,61],[20,8,15,12],[20,14,15,18,"voices"],[20,20,15,24],[20,23,15,27,"window"],[20,29,15,33],[20,30,15,34,"speechSynthesis"],[20,45,15,49],[20,46,15,50,"getVoices"],[20,55,15,59],[20,56,15,60],[20,57,15,61],[21,8,16,12,"resolve"],[21,15,16,19],[21,16,16,20,"voices"],[21,22,16,26],[21,23,16,27],[22,6,17,8],[22,7,17,9],[23,4,18,4],[23,5,18,5],[23,6,18,6],[24,2,19,0],[25,2,20,0],[25,8,20,6,"ExpoSpeech"],[25,18,20,16],[25,27,20,25,"NativeModule"],[25,56,20,37],[25,57,20,38],[26,4,21,4],[26,10,21,10,"speak"],[26,15,21,15,"speak"],[26,16,21,16,"id"],[26,18,21,18],[26,20,21,20,"text"],[26,24,21,24],[26,26,21,26,"options"],[26,33,21,33],[26,35,21,35],[27,6,22,8],[27,10,22,12,"text"],[27,14,22,16],[27,15,22,17,"length"],[27,21,22,23],[27,24,22,26,"MAX_SPEECH_INPUT_LENGTH"],[27,47,22,49],[27,49,22,51],[28,8,23,12],[28,14,23,18],[28,18,23,22,"CodedError"],[28,45,23,32],[28,46,23,33],[28,71,23,58],[28,73,23,60],[28,132,23,119],[28,135,23,122,"MAX_SPEECH_INPUT_LENGTH"],[28,158,23,145],[28,159,23,146],[29,6,24,8],[30,6,25,8],[30,12,25,14,"message"],[30,19,25,21],[30,22,25,24],[30,26,25,28,"SpeechSynthesisUtterance"],[30,50,25,52],[30,51,25,53],[30,52,25,54],[31,6,26,8],[31,10,26,12],[31,17,26,19,"options"],[31,24,26,26],[31,25,26,27,"rate"],[31,29,26,31],[31,34,26,36],[31,42,26,44],[31,44,26,46],[32,8,27,12,"message"],[32,15,27,19],[32,16,27,20,"rate"],[32,20,27,24],[32,23,27,27,"options"],[32,30,27,34],[32,31,27,35,"rate"],[32,35,27,39],[33,6,28,8],[34,6,29,8],[34,10,29,12],[34,17,29,19,"options"],[34,24,29,26],[34,25,29,27,"pitch"],[34,30,29,32],[34,35,29,37],[34,43,29,45],[34,45,29,47],[35,8,30,12,"message"],[35,15,30,19],[35,16,30,20,"pitch"],[35,21,30,25],[35,24,30,28,"options"],[35,31,30,35],[35,32,30,36,"pitch"],[35,37,30,41],[36,6,31,8],[37,6,32,8],[37,10,32,12],[37,17,32,19,"options"],[37,24,32,26],[37,25,32,27,"language"],[37,33,32,35],[37,38,32,40],[37,46,32,48],[37,48,32,50],[38,8,33,12,"message"],[38,15,33,19],[38,16,33,20,"lang"],[38,20,33,24],[38,23,33,27,"options"],[38,30,33,34],[38,31,33,35,"language"],[38,39,33,43],[39,6,34,8],[40,6,35,8],[40,10,35,12],[40,17,35,19,"options"],[40,24,35,26],[40,25,35,27,"volume"],[40,31,35,33],[40,36,35,38],[40,44,35,46],[40,46,35,48],[41,8,36,12,"message"],[41,15,36,19],[41,16,36,20,"volume"],[41,22,36,26],[41,25,36,29,"options"],[41,32,36,36],[41,33,36,37,"volume"],[41,39,36,43],[42,6,37,8],[43,6,38,8],[43,10,38,12],[43,23,38,25],[43,27,38,29,"options"],[43,34,38,36],[43,38,38,40,"options"],[43,45,38,47],[43,46,38,48,"_voiceIndex"],[43,57,38,59],[43,61,38,63],[43,65,38,67],[43,67,38,69],[44,8,39,12],[44,14,39,18,"voices"],[44,20,39,24],[44,23,39,27],[44,29,39,33,"getVoices"],[44,38,39,42],[44,39,39,43],[44,40,39,44],[45,8,40,12,"message"],[45,15,40,19],[45,16,40,20,"voice"],[45,21,40,25],[45,24,40,28,"voices"],[45,30,40,34],[45,31,40,35,"Math"],[45,35,40,39],[45,36,40,40,"min"],[45,39,40,43],[45,40,40,44,"voices"],[45,46,40,50],[45,47,40,51,"length"],[45,53,40,57],[45,56,40,60],[45,57,40,61],[45,59,40,63,"Math"],[45,63,40,67],[45,64,40,68,"max"],[45,67,40,71],[45,68,40,72],[45,69,40,73],[45,71,40,75,"options"],[45,78,40,82],[45,79,40,83,"_voiceIndex"],[45,90,40,94],[45,91,40,95],[45,92,40,96],[45,93,40,97],[46,6,41,8],[47,6,42,8],[47,10,42,12],[47,17,42,19,"options"],[47,24,42,26],[47,25,42,27,"voice"],[47,30,42,32],[47,35,42,37],[47,43,42,45],[47,45,42,47],[48,8,43,12],[48,14,43,18,"voices"],[48,20,43,24],[48,23,43,27],[48,29,43,33,"getVoices"],[48,38,43,42],[48,39,43,43],[48,40,43,44],[49,8,44,12,"message"],[49,15,44,19],[49,16,44,20,"voice"],[49,21,44,25],[49,24,45,16,"voices"],[49,30,45,22],[49,31,45,23,"Math"],[49,35,45,27],[49,36,45,28,"max"],[49,39,45,31],[49,40,45,32],[49,41,45,33],[49,43,45,35,"voices"],[49,49,45,41],[49,50,45,42,"findIndex"],[49,59,45,51],[49,60,45,53,"voice"],[49,65,45,58],[49,69,45,63,"voice"],[49,74,45,68],[49,75,45,69,"voiceURI"],[49,83,45,77],[49,88,45,82,"options"],[49,95,45,89],[49,96,45,90,"voice"],[49,101,45,95],[49,102,45,96],[49,103,45,97],[49,104,45,98],[50,6,46,8],[51,6,47,8],[51,10,47,12],[51,17,47,19,"options"],[51,24,47,26],[51,25,47,27,"onResume"],[51,33,47,35],[51,38,47,40],[51,48,47,50],[51,50,47,52],[52,8,48,12,"message"],[52,15,48,19],[52,16,48,20,"onresume"],[52,24,48,28],[52,27,48,31,"options"],[52,34,48,38],[52,35,48,39,"onResume"],[52,43,48,47],[53,6,49,8],[54,6,50,8],[54,10,50,12],[54,17,50,19,"options"],[54,24,50,26],[54,25,50,27,"onMark"],[54,31,50,33],[54,36,50,38],[54,46,50,48],[54,48,50,50],[55,8,51,12,"message"],[55,15,51,19],[55,16,51,20,"onmark"],[55,22,51,26],[55,25,51,29,"options"],[55,32,51,36],[55,33,51,37,"onMark"],[55,39,51,43],[56,6,52,8],[57,6,53,8],[57,10,53,12],[57,17,53,19,"options"],[57,24,53,26],[57,25,53,27,"onBoundary"],[57,35,53,37],[57,40,53,42],[57,50,53,52],[57,52,53,54],[58,8,54,12,"message"],[58,15,54,19],[58,16,54,20,"onboundary"],[58,26,54,30],[58,29,54,33,"options"],[58,36,54,40],[58,37,54,41,"onBoundary"],[58,47,54,51],[59,6,55,8],[60,6,56,8,"message"],[60,13,56,15],[60,14,56,16,"onstart"],[60,21,56,23],[60,24,56,27,"nativeEvent"],[60,35,56,38],[60,39,56,43],[61,8,57,12],[61,12,57,16],[61,13,57,17,"emit"],[61,17,57,21],[61,18,57,22],[61,44,57,48],[61,46,57,50],[62,10,57,52,"id"],[62,12,57,54],[63,10,57,56,"nativeEvent"],[64,8,57,68],[64,9,57,69],[64,10,57,70],[65,6,58,8],[65,7,58,9],[66,6,59,8,"message"],[66,13,59,15],[66,14,59,16,"onend"],[66,19,59,21],[66,22,59,25,"nativeEvent"],[66,33,59,36],[66,37,59,41],[67,8,60,12],[67,12,60,16],[67,13,60,17,"emit"],[67,17,60,21],[67,18,60,22],[67,41,60,45],[67,43,60,47],[68,10,60,49,"id"],[68,12,60,51],[69,10,60,53,"nativeEvent"],[70,8,60,65],[70,9,60,66],[70,10,60,67],[71,6,61,8],[71,7,61,9],[72,6,62,8,"message"],[72,13,62,15],[72,14,62,16,"onpause"],[72,21,62,23],[72,24,62,27,"nativeEvent"],[72,35,62,38],[72,39,62,43],[73,8,63,12],[73,12,63,16],[73,13,63,17,"emit"],[73,17,63,21],[73,18,63,22],[73,44,63,48],[73,46,63,50],[74,10,63,52,"id"],[74,12,63,54],[75,10,63,56,"nativeEvent"],[76,8,63,68],[76,9,63,69],[76,10,63,70],[77,6,64,8],[77,7,64,9],[78,6,65,8,"message"],[78,13,65,15],[78,14,65,16,"onerror"],[78,21,65,23],[78,24,65,27,"nativeEvent"],[78,35,65,38],[78,39,65,43],[79,8,66,12],[79,12,66,16],[79,13,66,17,"emit"],[79,17,66,21],[79,18,66,22],[79,42,66,46],[79,44,66,48],[80,10,66,50,"id"],[80,12,66,52],[81,10,66,54,"nativeEvent"],[82,8,66,66],[82,9,66,67],[82,10,66,68],[83,6,67,8],[83,7,67,9],[84,6,68,8,"message"],[84,13,68,15],[84,14,68,16,"text"],[84,18,68,20],[84,21,68,23,"text"],[84,25,68,27],[85,6,69,8,"window"],[85,12,69,14],[85,13,69,15,"speechSynthesis"],[85,28,69,30],[85,29,69,31,"speak"],[85,34,69,36],[85,35,69,37,"message"],[85,42,69,44],[85,43,69,45],[86,6,70,8],[86,13,70,15,"message"],[86,20,70,22],[87,4,71,4],[88,4,72,4],[88,10,72,10,"getVoices"],[88,19,72,19,"getVoices"],[88,20,72,19],[88,22,72,22],[89,6,73,8],[89,12,73,14,"voices"],[89,18,73,20],[89,21,73,23],[89,27,73,29,"getVoices"],[89,36,73,38],[89,37,73,39],[89,38,73,40],[90,6,74,8],[90,13,74,15,"voices"],[90,19,74,21],[90,20,74,22,"map"],[90,23,74,25],[90,24,74,27,"voice"],[90,29,74,32],[90,34,74,38],[91,8,75,12,"identifier"],[91,18,75,22],[91,20,75,24,"voice"],[91,25,75,29],[91,26,75,30,"voiceURI"],[91,34,75,38],[92,8,76,12,"quality"],[92,15,76,19],[92,17,76,21,"VoiceQuality"],[92,37,76,33],[92,38,76,34,"Default"],[92,45,76,41],[93,8,77,12,"isDefault"],[93,17,77,21],[93,19,77,23,"voice"],[93,24,77,28],[93,25,77,29,"default"],[93,32,77,36],[94,8,78,12,"language"],[94,16,78,20],[94,18,78,22,"voice"],[94,23,78,27],[94,24,78,28,"lang"],[94,28,78,32],[95,8,79,12,"localService"],[95,20,79,24],[95,22,79,26,"voice"],[95,27,79,31],[95,28,79,32,"localService"],[95,40,79,44],[96,8,80,12,"name"],[96,12,80,16],[96,14,80,18,"voice"],[96,19,80,23],[96,20,80,24,"name"],[96,24,80,28],[97,8,81,12,"voiceURI"],[97,16,81,20],[97,18,81,22,"voice"],[97,23,81,27],[97,24,81,28,"voiceURI"],[98,6,82,8],[98,7,82,9],[98,8,82,10],[98,9,82,11],[99,4,83,4],[100,4,84,4],[100,10,84,10,"isSpeaking"],[100,20,84,20,"isSpeaking"],[100,21,84,20],[100,23,84,23],[101,6,85,8],[101,13,85,15,"window"],[101,19,85,21],[101,20,85,22,"speechSynthesis"],[101,35,85,37],[101,36,85,38,"speaking"],[101,44,85,46],[102,4,86,4],[103,4,87,4],[103,10,87,10,"stop"],[103,14,87,14,"stop"],[103,15,87,14],[103,17,87,17],[104,6,88,8],[104,13,88,15,"window"],[104,19,88,21],[104,20,88,22,"speechSynthesis"],[104,35,88,37],[104,36,88,38,"cancel"],[104,42,88,44],[104,43,88,45],[104,44,88,46],[105,4,89,4],[106,4,90,4],[106,10,90,10,"pause"],[106,15,90,15,"pause"],[106,16,90,15],[106,18,90,18],[107,6,91,8],[107,13,91,15,"window"],[107,19,91,21],[107,20,91,22,"speechSynthesis"],[107,35,91,37],[107,36,91,38,"pause"],[107,41,91,43],[107,42,91,44],[107,43,91,45],[108,4,92,4],[109,4,93,4],[109,10,93,10,"resume"],[109,16,93,16,"resume"],[109,17,93,16],[109,19,93,19],[110,6,94,8],[110,13,94,15,"window"],[110,19,94,21],[110,20,94,22,"speechSynthesis"],[110,35,94,37],[110,36,94,38,"resume"],[110,42,94,44],[110,43,94,45],[110,44,94,46],[111,4,95,4],[112,4,96,4,"maxSpeechInputLength"],[112,24,96,24],[112,27,96,27,"MAX_SPEECH_INPUT_LENGTH"],[112,50,96,50],[113,2,97,0],[114,2,97,1],[114,6,97,1,"_default"],[114,14,97,1],[114,17,97,1,"exports"],[114,24,97,1],[114,25,97,1,"default"],[114,32,97,1],[114,35,98,15],[114,39,98,15,"registerWebModule"],[114,73,98,32],[114,75,98,33,"ExpoSpeech"],[114,85,98,43],[114,87,98,45],[114,99,98,57],[114,100,98,58],[115,0,98,58],[115,3]],"functionMap":{"names":["<global>","getVoices","Promise$argument_0","window.speechSynthesis.onvoiceschanged","ExpoSpeech","ExpoSpeech#speak","voices.findIndex$argument_0","message.onstart","message.onend","message.onpause","message.onerror","ExpoSpeech#getVoices","voices.map$argument_0","ExpoSpeech#isSpeaking","ExpoSpeech#stop","ExpoSpeech#pause","ExpoSpeech#resume"],"mappings":"AAA;ACI;uBCC;iDCQ;SDG;KDC;CDC;AIC;ICC;oDCwB,2CD;0BEW;SFE;wBGC;SHE;0BIC;SJE;0BKC;SLE;KDI;IOC;0BCE;UDQ;KPC;ISC;KTE;IUC;KVE;IWC;KXE;IYC;KZE;CJE"}},"type":"js/module"}]}